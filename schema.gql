# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Message {
  id: ID!
  message: String!
}

type Mutation {
  deleteAccount(password: String!): Message!
  updateOnlineStatus(defaultStatus: OnlineStatus!): User!
  updateProfilePicture(picture: Upload!): User!
}

enum NotificationType {
  DELETE
  NEW
  UPDATE
}

enum OnlineStatus {
  BUSY
  DO_NOT_DISTURB
  IDLE
  INVISIBLE
  OFFLINE
  ONLINE
}

type PageInfo {
  endCursor: String!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String!
}

type PaginatedUsers {
  currentCount: Int!
  edges: [UserEntityPageEdge!]!
  pageInfo: PageInfo!
  previousCount: Int!
}

type Query {
  me: User!
  userById(userId: Int!): User!
  userByUsername(username: String!): User!
  users(after: String, cursor: QueryCursor = DATE, first: Int = 10, order: QueryOrder = DESC, search: String): PaginatedUsers!
}

enum QueryCursor {
  ALPHA
  DATE
}

enum QueryOrder {
  ASC
  DESC
}

type Subscription {
  userNotification(userId: Int): UserNotification!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  createdAt: String!
  defaultStatus: OnlineStatus
  email: String
  id: Int!
  lastOnline: String!
  name: String!
  onlineStatus: OnlineStatus!
  picture: String
  twoFactor: Boolean
  updatedAt: String!
  username: String!
}

type UserEntityNotificationEdge {
  cursor: String!
  node: User!
}

type UserEntityPageEdge {
  cursor: String!
  node: User!
}

type UserNotification {
  edge: UserEntityNotificationEdge!
  type: NotificationType!
}